from TelegramBot import config
from TelegramBot.logging import LOGGER
from datetime import datetime, timedelta, timezone, tzinfo
import random
import inspect
from .message_generator import generate_message
from TelegramBot.helpers.admin_filter import IsNight
from TelegramBot.helpers.local_timezone import bangkok_tz
from TelegramBot.helpers.user_limits import reset_limits

chat_id=config.CHAT_ID

class MessageState:
    def __init__(self):
        self.last_message_time = None

message_state = MessageState()

async def scheduled_job(bot):
    try:
        await bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç @bashechka ! –í—Ä–µ–º—è –∫—Ä—É—Ç–∏—Ç—å –±–∞—Ä–∞–±–∞–Ω üóìÔ∏è")
        LOGGER(__name__).info("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        LOGGER(__name__).info("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

def utc_to_local(utc_dt):
    return utc_dt.replace(tzinfo=timezone.utc).astimezone(bangkok_tz)

async def check_last_message(bot):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 4 –º–∏–Ω—É—Ç.
    """
    LOGGER(__name__).info(f"last_message_time: {message_state.last_message_time}")
    if message_state.last_message_time is None:
        return

    current_time = datetime.now(bangkok_tz)
    time_diff = current_time - message_state.last_message_time
    
    IsNight(current_time)

    if time_diff > timedelta(hours=6) and not IsNight(current_time):
        try:
            message = await generate_message()
            await bot.send_message(chat_id, message)
            LOGGER(__name__).info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç")
            message_state.last_message_time = current_time
        except Exception as e:
            LOGGER(__name__).info(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    else:
        LOGGER(__name__).info(f"time_diff —Å–µ–π—á–∞—Å {time_diff} —á—Ç–æ –º–µ–Ω—å—à–µ {timedelta(hours=6)}")
        LOGGER(__name__).info(f"IsNight {IsNight(current_time)}")
   

async def reset_limits_job():
    """
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
    """
    reset_limits()
    LOGGER(__name__).info("–õ–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–±—Ä–æ—à–µ–Ω—ã")
   
