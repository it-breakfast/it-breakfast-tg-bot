import aiohttp
from TelegramBot.logging import LOGGER

API_URL = "https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2"

async def generate_message() -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é Mistral —á–µ—Ä–µ–∑ HuggingFace API.
    """
    try:
        prompt = """<s>[INST] –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫–æ–µ, –∑–∞–±–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —á–∞—Ç–∞ IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤. 
        –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. 
        –¢–µ–º–∞: —Ç–∏—à–∏–Ω–∞ –≤ —á–∞—Ç–µ, –Ω—É–∂–Ω–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∏—Ç—å –ª—é–¥–µ–π. [/INST]</s>"""
        
        LOGGER(__name__).info("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ HuggingFace API...")
        async with aiohttp.ClientSession() as session:
            async with session.post(
                API_URL,
                json={"inputs": prompt, "parameters": {"max_length": 200, "temperature": 0.7}}
            ) as response:
                LOGGER(__name__).info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API. –°—Ç–∞—Ç—É—Å: {response.status}")
                
                if response.status == 200:
                    data = await response.json()
                    generated_text = data[0]["generated_text"]
                    LOGGER(__name__).info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {generated_text}")
                    return generated_text.split("[/INST]")[-1].strip()
                else:
                    error_text = await response.text()
                    LOGGER(__name__).error(f"–û—à–∏–±–∫–∞ API: {response.status}, –û—Ç–≤–µ—Ç: {error_text}")
                    return "–≠–π, –Ω–∞—Ä–æ–¥! –î–∞–≤–∞–π—Ç–µ –ø–æ–æ–±—â–∞–µ–º—Å—è! ü§ñ"
            
    except Exception as e:
        LOGGER(__name__).error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return "–≠–π, –Ω–∞—Ä–æ–¥! –î–∞–≤–∞–π—Ç–µ –ø–æ–æ–±—â–∞–µ–º—Å—è! ü§ñ" 
